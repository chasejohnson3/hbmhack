# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

import pydra
from pydra.engine import specs
import attr


input_fields = [
    (
        "radius", 
        attr.ib(
            type=InputMultiPath,
            metadata={
                "argstr": "--radius %s",
                "help_string": "The radius of a hole to be filled"
            }
        ),
    ),
    (
        "majorityThreshold", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--majorityThreshold %d",
                "help_string": "The number of pixels over 50% that will decide whether an OFF pixel will become ON or not. For example, if the neighborhood of a pixel has 124 pixels (excluding itself), the 50% will be 62, and if you set a Majority threshold of 5, that means that the filter will require 67 or more neighbor pixels to be ON in order to switch the current OFF pixel to ON."
            }
        ),
    ),
    (
        "background", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--background %d",
                "help_string": "The value associated with the background (not object)"
            }
        ),
    ),
    (
        "foreground", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--foreground %d",
                "help_string": "The value associated with the foreground (object)"
            }
        ),
    ),
    (
        "inputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Input volume to be filtered",
                "position": -2
            }
        ),
    ),
    (
        "outputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Output filtered",
                "position": -1
            }
        ),
    ),
]

output_fields = [
    (
        "outputVolume", 
        attr.ib(
            type=File,
            metadata={
                "help_string": "Output filtered",
                "position": -1,
                "exists": True
            }
        ),
    ),
]

input_spec_pdr = specs.SpecInfo(name="Input", fields=input_fields, bases=(specs.ShellSpec,))
output_spec_pdr = specs.SpecInfo(name="Output", fields=output_fields, bases=(specs.ShellSpec,))

VotingBinaryHoleFillingImageFilter_task = pydra.ShellCommandTask(
    name="VotingBinaryHoleFillingImageFilter",
    executable=" VotingBinaryHoleFillingImageFilter ", 
    input_spec=input_spec_pdr,
    output_spec=output_spec_pdr
)