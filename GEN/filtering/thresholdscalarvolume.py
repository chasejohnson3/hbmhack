# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

import pydra
from pydra.engine import specs
import attr


input_fields = [
    (
        "InputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Input volume",
                "position": -2
            }
        ),
    ),
    (
        "OutputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Thresholded input volume",
                "position": -1
            }
        ),
    ),
    (
        "thresholdtype", 
        attr.ib(
            type=traits.Enum,
            metadata={
                "argstr": "--thresholdtype %s",
                "help_string": "What kind of threshold to perform. If Outside is selected, uses Upper and Lower values. If Below is selected, uses the ThresholdValue, if Above is selected, uses the ThresholdValue."
            }
        ),
    ),
    (
        "threshold", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--threshold %f",
                "help_string": "Threshold value"
            }
        ),
    ),
    (
        "lower", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--lower %f",
                "help_string": "Lower threshold value"
            }
        ),
    ),
    (
        "upper", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--upper %f",
                "help_string": "Upper threshold value"
            }
        ),
    ),
    (
        "outsidevalue", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--outsidevalue %f",
                "help_string": "Set the voxels to this value if they fall outside the threshold range"
            }
        ),
    ),
    (
        "negate", 
        attr.ib(
            type=traits.Bool,
            metadata={
                "argstr": "--negate ",
                "help_string": "Swap the outside value with the inside value."
            }
        ),
    ),
]

output_fields = [
    (
        "OutputVolume", 
        attr.ib(
            type=File,
            metadata={
                "help_string": "Thresholded input volume",
                "position": -1,
                "exists": True
            }
        ),
    ),
]

input_spec_pdr = specs.SpecInfo(name="Input", fields=input_fields, bases=(specs.ShellSpec,))
output_spec_pdr = specs.SpecInfo(name="Output", fields=output_fields, bases=(specs.ShellSpec,))

ThresholdScalarVolume_task = pydra.ShellCommandTask(
    name="ThresholdScalarVolume",
    executable=" ThresholdScalarVolume ", 
    input_spec=input_spec_pdr,
    output_spec=output_spec_pdr
)