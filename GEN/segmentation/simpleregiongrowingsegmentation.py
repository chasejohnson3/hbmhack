# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

import pydra
from pydra.engine import specs
import attr


input_fields = [
    (
        "smoothingIterations", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--smoothingIterations %d",
                "help_string": "Number of smoothing iterations"
            }
        ),
    ),
    (
        "timestep", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--timestep %f",
                "help_string": "Timestep for curvature flow"
            }
        ),
    ),
    (
        "iterations", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--iterations %d",
                "help_string": "Number of iterations of region growing"
            }
        ),
    ),
    (
        "multiplier", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--multiplier %f",
                "help_string": "Number of standard deviations to include in intensity model"
            }
        ),
    ),
    (
        "neighborhood", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--neighborhood %d",
                "help_string": "The radius of the neighborhood over which to calculate intensity model"
            }
        ),
    ),
    (
        "labelvalue", 
        attr.ib(
            type=traits.Int,
            metadata={
                "argstr": "--labelvalue %d",
                "help_string": "The integer value (0-255) to use for the segmentation results. This will determine the color of the segmentation that will be generated by the Region growing algorithm"
            }
        ),
    ),
    (
        "seed", 
        attr.ib(
            type=InputMultiPath,
            metadata={
                "argstr": "--seed %s...",
                "help_string": "Seed point(s) for region growing"
            }
        ),
    ),
    (
        "inputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Input volume to be filtered",
                "position": -2
            }
        ),
    ),
    (
        "outputVolume", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "%s",
                "help_string": "Output filtered",
                "position": -1
            }
        ),
    ),
]

output_fields = [
    (
        "outputVolume", 
        attr.ib(
            type=File,
            metadata={
                "help_string": "Output filtered",
                "position": -1,
                "exists": True
            }
        ),
    ),
]

input_spec_pdr = specs.SpecInfo(name="Input", fields=input_fields, bases=(specs.ShellSpec,))
output_spec_pdr = specs.SpecInfo(name="Output", fields=output_fields, bases=(specs.ShellSpec,))

SimpleRegionGrowingSegmentation_task = pydra.ShellCommandTask(
    name="SimpleRegionGrowingSegmentation",
    executable=" SimpleRegionGrowingSegmentation ", 
    input_spec=input_spec_pdr,
    output_spec=output_spec_pdr
)