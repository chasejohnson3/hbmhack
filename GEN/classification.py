# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

import pydra
from pydra.engine import specs
import attr


input_fields = [
    (
        "inputImageModalities", 
        attr.ib(
            type=InputMultiPath,
            metadata={
                "argstr": "--inputImageModalities %s...",
                "help_string": "Input image files names (.nii.gz or .nrrd)"
            }
        ),
    ),
    (
        "threshold", 
        attr.ib(
            type=traits.Float,
            metadata={
                "argstr": "--threshold %f",
                "help_string": "threshold value to define class membership."
            }
        ),
    ),
    (
        "numberOfSubSamples", 
        attr.ib(
            type=InputMultiPath,
            metadata={
                "argstr": "--numberOfSubSamples %s",
                "help_string": "Number of continous index samples taken at each direction of lattice space for each plug volume."
            }
        ),
    ),
    (
        "verbose", 
        attr.ib(
            type=traits.Bool,
            metadata={
                "argstr": "--verbose ",
                "help_string": "Print out some debugging information."
            }
        ),
    ),
    (
        "outputMaskFile", 
        attr.ib(
            type=File,
            metadata={
                "argstr": "--outputMaskFile %s",
                "help_string": "Ouput binary mask that includes the pure plugs (.nrrd)"
            }
        ),
    ),
]

output_fields = [
    (
        "outputMaskFile", 
        attr.ib(
            type=File,
            metadata={
                "help_string": "Ouput binary mask that includes the pure plugs (.nrrd)",
                "exists": True
            }
        ),
    ),
]

input_spec_pdr = specs.SpecInfo(name="Input", fields=input_fields, bases=(specs.ShellSpec,))
output_spec_pdr = specs.SpecInfo(name="Output", fields=output_fields, bases=(specs.ShellSpec,))

GeneratePurePlugMask_task = pydra.ShellCommandTask(
    name="GeneratePurePlugMask",
    executable=" GeneratePurePlugMask ", 
    input_spec=input_spec_pdr,
    output_spec=output_spec_pdr
)