# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

from nipype.interfaces.base import (CommandLine, CommandLineInputSpec, SEMLikeCommandLine, TraitedSpec,
                    File, Directory, traits, isdefined, InputMultiPath, OutputMultiPath)
import os

from nipype.interfaces.base import traits_extension
import pydra
from pydra.engine import specs
import traits
import attr
from pathlib import Path
import importlib
import typing as ty



fields = [
    (
        "imageVolume",
        attr.ib(
            type=File,
            metadata={
                "help_string": "Image Volume",
                "argstr": "--imageVolume %s",
            },
        ),
    ),
    (
        "labelVolume",
        attr.ib(
            type=File,
            metadata={
                "help_string": "Label Volume",
                "argstr": "--labelVolume %s",
            },
        ),
    ),
    (
        "labelNameFile",
        attr.ib(
            type=File,
            metadata={
                "help_string": "Label Name File",
                "argstr": "--labelNameFile %s",
            },
        ),
    ),
    (
        "outputPrefixColumnNames",
        attr.ib(
            type=ty.Any,
            metadata={
                "help_string": "Prefix Column Name(s)",
                "argstr": "--outputPrefixColumnNames %s",
                "sep": ","
            },
        ),
    ),
    (
        "outputPrefixColumnValues",
        attr.ib(
            type=ty.Any,
            metadata={
                "help_string": "Prefix Column Value(s)",
                "argstr": "--outputPrefixColumnValues %s",
                "sep": ","
            },
        ),
    ),
    (
        "labelFileType",
        attr.ib(
            type=File,
            metadata={
                "help_string": "Label File Type",
                "argstr": "--labelFileType %s",
            },
        ),
    ),
    (
        "numberOfHistogramBins",
        attr.ib(
            type=int,
            metadata={
                "help_string": "Number Of Histogram Bins",
                "argstr": "--numberOfHistogramBins %d",
            },
        ),
    ),
    (
        "minMaxType",
        attr.ib(
            type=ty.Any,
            metadata={
                "help_string": "Define minimim and maximum values based upon the image, label, or via command line",
                "argstr": "--minMaxType %s",
            },
        ),
    ),
    (
        "userDefineMinimum",
        attr.ib(
            type=float,
            metadata={
                "help_string": "User define minimum value",
                "argstr": "--userDefineMinimum %f",
            },
        ),
    ),
    (
        "userDefineMinimum",
        attr.ib(
            type=float,
            metadata={
                "help_string": "User define maximum value",
                "argstr": "--userDefineMaximum %f",
            },
        ),
    ),
]
input_spec_pdr = specs.SpecInfo(name="Input", fields=fields, bases=(specs.ShellSpec,))

task = pydra.ShellCommandTask(name="example", executable=" BRAINSLabelStats ",
                              input_spec=input_spec_pdr)

#print("task command line generated by pydra", task.cmdline)

